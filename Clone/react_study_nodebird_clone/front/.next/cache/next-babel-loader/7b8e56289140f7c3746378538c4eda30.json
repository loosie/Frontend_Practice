{"ast":null,"code":"var _jsxFileName = \"/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Input, Button, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport useInput from './hooks/useinput';\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/CommentForm.js"],"names":["Input","Button","Form","PropTypes","React","useCallback","useSelector","useInput","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","position","margin","propTypes","object","isRequired"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE9B,QAAMC,EAAE,GAAGJ,WAAW,CAACK,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCR,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMS,eAAe,GAAGX,WAAW,CAC/B,MAAM;AACFY,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACH,GAH8B,EAI/B,CAACA,WAAD,CAJ+B,CAAnC;AAMA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEN,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CAnBD;;AAsBAP,WAAW,CAACa,SAAZ,GAAuB;AACnBZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBC;AADJ,CAAvB;AAIA,eAAef,WAAf","sourcesContent":["import { Input, Button, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react'\nimport { useSelector } from 'react-redux';\nimport useInput from './hooks/useinput';\n\nconst CommentForm = ({ post }) => {\n\n    const id = useSelector(state => state.user.me?.id);\n    const [commentText, onChangeCommentText] = useInput('');\n\n    const onSubmitComment = useCallback(\n        () => {\n            console.log(post.id, commentText);\n        },\n        [commentText]);\n\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: 'relative', margin: 0}} >\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n                <Button  type=\"primary\" htmlType=\"submit\">삐약</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\nCommentForm.propTypes ={\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm\n"]},"metadata":{},"sourceType":"module"}