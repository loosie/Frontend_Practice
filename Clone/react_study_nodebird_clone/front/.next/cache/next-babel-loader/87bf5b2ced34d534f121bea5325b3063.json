{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var middlewares = []; // production: 배포용\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer); // store.dispatch({\n  //     type: 'CHANGE_NICKNAME',\n  //     data: 'boogicho',\n  // })\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,EAApB,CADyB,CAGzB;;AACA,MAAMC,QAAQ,GAAG,QACfP,OAAO,CAACE,eAAe,MAAf,SAAmBI,WAAnB,CAAD,CADQ,GAEfH,mBAAmB,CAACD,eAAe,MAAf,SAAmBI,WAAnB,CAAD,CAFrB;AAIA,MAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB,CARyB,CAUzB;AACA;AACA;AACA;;AACA,SAAOC,KAAP;AAEH,CAhBD;;AAkBA,IAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers'\n\nconst configureStore = () => {\n    const middlewares = [];\n\n    // production: 배포용\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n\n    const store = createStore(reducer, enhancer);\n\n    // store.dispatch({\n    //     type: 'CHANGE_NICKNAME',\n    //     data: 'boogicho',\n    // })\n    return store;\n\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development'\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}