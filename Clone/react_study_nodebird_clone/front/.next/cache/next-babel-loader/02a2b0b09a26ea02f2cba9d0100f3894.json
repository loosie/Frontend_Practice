{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  // production: 배포용\n  var enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","composeWithDevTools","reducer","configureStore","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB;AACA,MAAMC,QAAQ,GAAG,QACfN,OAAO,CAACE,eAAe,CAAC,EAAD,CAAhB,CADQ,GAEfC,mBAAmB,CAACD,eAAe,CAAC,EAAD,CAAhB,CAFrB;AAIA,MAAMK,KAAK,GAAGN,WAAW,CAACG,OAAD,EAAUE,QAAV,CAAzB;AAEAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAf;AAIA,SAAOH,KAAP;AAEH,CAfD;;AAiBA,IAAMI,OAAO,GAAGZ,aAAa,CAACM,cAAD,EAAiB;AAC1CO,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers'\n\nconst configureStore = () => {\n\n    // production: 배포용\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware([]))\n    : composeWithDevTools(applyMiddleware([]))\n\n    const store = createStore(reducer, enhancer);\n\n    store.dispatch({\n        type: 'CHANGE_NICKNAME',\n        data: 'boogicho',\n    })\n    return store;\n\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development'\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}