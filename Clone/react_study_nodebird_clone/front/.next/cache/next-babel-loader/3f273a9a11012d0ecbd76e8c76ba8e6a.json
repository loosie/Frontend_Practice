{"ast":null,"code":"var _jsxFileName = \"/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/PostCard.js"],"names":["React","useSelector","PropTypes","Card","Popover","Button","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","Avatar","PostImages","PostCard","post","liked","setLiked","useState","commentFormOpened","setCommentFormOpened","id","state","user","me","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button } from 'antd'\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons'\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\n\n\nconst PostCard = ({ post } ) => {\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const id = useSelector(state => state.user.me?.id);\n\n    return (\n        <div style={{marginBottom: 20}}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\"/>,\n                    <HeartOutlined key=\"heart\"/>,\n                    <MessageOutlined key=\"comment\"/>,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id ? (\n                            <>\n                                <Button>수정</Button>\n                                <Button type=\"danger\">삭제</Button>\n                            </>\n                            ) : <Button>신고</Button>}\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n                <Card.Meta \n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                />\n            </Card>\n            {/* <CommentForm /> */}\n            {/* <Comments /> */}\n        </div>\n    )\n}\n\nPostCard.propTypes={\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object)\n    }).isRequired,\n};\n\nexport default PostCard\n"]},"metadata":{},"sourceType":"module"}