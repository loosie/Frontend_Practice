{"ast":null,"code":"var _jsxFileName = \"/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/ImagesZoom/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nconst Global = createGlobalStyle`\n    .slick-slide{\n        display: inline-block;\n    }\n    \n    // .ant-card-cover {\n    //     transform: none !important;\n    // }\n`;\nconst Overlay = styled.div`\n    position: fixed;\n    z-index: 5000;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst Header = styled.header`\n    header: 44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align: center;\n\n    & h1{\n        margin: 0;\n        font-size: 17px;\n        color: #333;\n        line-height: 44px;\n    }\n\n    & button {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: 13px;\n        line-height: 14px;\n        cursor: pointer;\n    }\n`;\nconst SlickWrapper = styled.div`\n    height: calc(100% - 44px);\n    background: #090909;\n`;\nconst ImgWrapper = styled.div`\n    padding: 32px;\n    text-align: center;\n\n    & img {\n        margin: 0 auto;\n        max-height: 750px;\n    }\n`;\nconst Indicator = styled.div`\n    text-align: center;\n\n    & > div {\n        width: 75px;\n        height: 30px;\n        line-height: 30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return __jsx(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, images.map(v => __jsx(ImgWrapper, {\n    key: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: v.src,\n    alt: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","Global","Overlay","div","Header","header","SlickWrapper","ImgWrapper","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","propTypes","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AAEA,MAAMC,MAAM,GAAGD,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAME,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAwBA,MAAMC,YAAY,GAAGP,MAAM,CAACI,GAAI;AAChC;AACA;AACA,CAHA;AAKA,MAAMI,UAAU,GAAGR,MAAM,CAACI,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMK,SAAS,GAAGT,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAiBA,MAAMM,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAExC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,CAAC,CAAD,CAAhD;AAEA,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAQ,IAAA,OAAO,EAAEe,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAFJ,EAMI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,YAAY,EAAE,CADlB;AAEI,IAAA,WAAW,EAAGG,KAAD,IAAWD,eAAe,CAACC,KAAD,CAF3C;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,MAAM,EAAE,KAJZ;AAKI,IAAA,YAAY,EAAE,CALlB;AAMI,IAAA,cAAc,EAAE,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IACR,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,IAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CARL,CADJ,CADJ,CANJ,CADJ;AA2BH,CA/BD;;AAiCAR,UAAU,CAACS,SAAX,GAAuB;AACnBR,EAAAA,MAAM,EAAEb,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UADzB;AAEnBV,EAAAA,OAAO,EAAEd,SAAS,CAACyB,IAAV,CAAeD;AAFL,CAAvB;AAKA,eAAeZ,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst Global = createGlobalStyle`\n    .slick-slide{\n        display: inline-block;\n    }\n    \n    // .ant-card-cover {\n    //     transform: none !important;\n    // }\n`;\n\nconst Overlay = styled.div`\n    position: fixed;\n    z-index: 5000;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`\nconst Header = styled.header`\n    header: 44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align: center;\n\n    & h1{\n        margin: 0;\n        font-size: 17px;\n        color: #333;\n        line-height: 44px;\n    }\n\n    & button {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: 13px;\n        line-height: 14px;\n        cursor: pointer;\n    }\n`\n\nconst SlickWrapper = styled.div`\n    height: calc(100% - 44px);\n    background: #090909;\n`\n\nconst ImgWrapper = styled.div`\n    padding: 32px;\n    text-align: center;\n\n    & img {\n        margin: 0 auto;\n        max-height: 750px;\n    }\n`\n\nconst Indicator = styled.div`\n    text-align: center;\n\n    & > div {\n        width: 75px;\n        height: 30px;\n        line-height: 30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n`\n\n\nconst ImagesZoom = ({ images, onClose }) => {\n\n    const [currentSlide, setCurrentSlide] = useState(0)\n\n    return (\n        <Overlay>\n            <Global />\n            <Header>\n                <h1>상세 이미지</h1>\n                <button onClick={onClose}>X</button>\n            </Header>\n            <SlickWrapper>\n                <div>\n                    <Slick \n                        initialSlide={0}\n                        afterChange={(slide) => setCurrentSlide(slide)}\n                        infinite\n                        arrows={false}\n                        slidesToShow={1}\n                        slidesToScroll={1}\n                    >\n                        {images.map((v) =>(\n                            <ImgWrapper key={v.src}>\n                                <img src={v.src} alt={v.src}/>\n                            </ImgWrapper>\n                        ))}\n                    </Slick>\n                </div>\n            </SlickWrapper>\n        </Overlay>\n    )\n}\n\nImagesZoom.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default ImagesZoom\n"]},"metadata":{},"sourceType":"module"}