{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'loosie'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://i.pinimg.com/originals/05/8d/5e/058d5e4b595686316522dee2cb987292.jpg'\n    }, {\n      src: 'https://i.pinimg.com/564x/0c/8a/b3/0c8ab3a08066fde463d3b618bc3d9837.jpg'\n    }, {\n      src: 'https://i.pinimg.com/564x/0c/8a/b3/0c8ab3a08066fde463d3b618bc3d9837.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우아 대박이네요~'\n    }, {\n      User: {\n        nickname: 'kozy'\n      },\n      content: '오 굳굳이에요'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다',\n  User: {\n    id: 1,\n    nickname: 'loosie'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ijong-won/Desktop/code/Frontend_Practice/Clone/react_study_nodebird_clone/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AACA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAFE;AAMRC,IAAAA,OAAO,EAAE,uBAND;AAORC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,GAAG,EAAE;AADA,KAAD,EAGR;AACIA,MAAAA,GAAG,EAAE;AADT,KAHQ,EAMR;AACIA,MAAAA,GAAG,EAAE;AADT,KANQ,CAPA;AAmBRC,IAAAA,QAAQ,EAAE,CAAC;AACPL,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADC;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKR;AACEF,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KALQ;AAnBF,GAAD,CADa;AAgCxBI,EAAAA,UAAU,EAAE,EAhCY;AAiCxBC,EAAAA,SAAS,EAAE;AAjCa,CAArB;AAoCP,IAAMC,QAAQ,GAAG,UAAjB;AAEA,OAAO,IAAMC,OAAO,GAAE;AAClBC,EAAAA,IAAI,EAAEF;AADY,CAAf;AAIP,IAAMG,SAAS,GAAE;AACbZ,EAAAA,EAAE,EAAE,CADS;AAEbG,EAAAA,OAAO,EAAE,UAFI;AAGbF,EAAAA,IAAI,EAAE;AACFD,IAAAA,EAAE,EAAE,CADF;AAEFE,IAAAA,QAAQ,EAAE;AAFR,GAHO;AAObE,EAAAA,MAAM,EAAE,EAPK;AAQbE,EAAAA,QAAQ,EAAE;AARG,CAAjB;;AAWA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBhB,YAAwB;AAAA,MAAViB,MAAU;;AAC7C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKF,QAAL;AACI,6CACGK,KADH;AAEAf,QAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFT;AAGAS,QAAAA,SAAS,EAAE;AAHX;;AAKJ;AACI,aAAOM,KAAP;AARR;AAUH,CAXD;;AAcA,eAAeD,OAAf","sourcesContent":["\nexport const initialState = {\n    mainPosts: [{\n        id: 1,\n        User: {\n            id: 1,\n            nickname: 'loosie',\n        },\n        content: '첫 번째 게시글 #해시태그 #익스프레스',\n        Images: [{\n            src: 'https://i.pinimg.com/originals/05/8d/5e/058d5e4b595686316522dee2cb987292.jpg'\n        },\n        {\n            src: 'https://i.pinimg.com/564x/0c/8a/b3/0c8ab3a08066fde463d3b618bc3d9837.jpg'\n        },\n        {\n            src: 'https://i.pinimg.com/564x/0c/8a/b3/0c8ab3a08066fde463d3b618bc3d9837.jpg'\n        },\n        \n       ],\n        \n        Comments: [{\n            User: {\n                nickname: 'nero'\n            },\n            content: '우아 대박이네요~'\n        },{\n            User: {\n                nickname: 'kozy'\n            },\n            content: '오 굳굳이에요'\n        }]\n    }],\n    imagePaths: [],\n    postAdded: false,\n}\n\nconst ADD_POST = 'ADD_POST';\n\nexport const addPost ={\n    type: ADD_POST,\n}\n\nconst dummyPost ={\n    id: 2,\n    content: '더미데이터입니다',\n    User: {\n        id: 1,\n        nickname: 'loosie'\n    },\n    Images: [],\n    Comments: [],\n}\n\nconst reducer = (state = initialState, action) =>{\n    switch (action.type){\n        case ADD_POST:\n            return {\n            ...state,\n            mainPosts: [dummyPost, ...state.mainPosts],\n            postAdded: true\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}